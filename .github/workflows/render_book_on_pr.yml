name: Render Book on PR to Main

on:
  workflow_dispatch:  # Allows the workflow to be triggered manually
  pull_request_target:
    types: [closed]
    branches:
      - main

jobs:
  build-and-render:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'handbook_v')
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
    #   # Old RENV_PATHS_ROOT: ~/.local/share/renv
    #   RENV_PATHS_ROOT: ~/.cache/R/renv
    #   R_LIBS_USER: ~/.cache/R/renv/Library
       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.0'

      - name: "Setup pandoc"
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install system dependencies and R packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libxml2-dev libssl-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev libglpk-dev r-cran-rjava r-base-dev openjdk-11-jdk gdal-bin libgdal-dev libxslt1-dev libgit2-dev libgeos-dev libproj-dev libudunits2-dev libcairo2-dev libxt-dev libmagick++-dev libpoppler-cpp-dev libpq-dev libmysqlclient-dev libsqlite3-dev libssh2-1-dev libgmp3-dev libmpfr-dev libprotobuf-dev protobuf-compiler libgl1-mesa-dev libglu1-mesa-dev libpoppler-glib-dev libtbb-dev libsodium-dev libv8-dev libnetcdf-dev netcdf-bin libjq-dev libharfbuzz-dev libfribidi-dev libnode-dev jq
          sudo R CMD javareconf
          # Rscript -e 'install.packages(c("igraph", "Rglpk", "rJava"), repos="http://cran.r-project.org")'

      - name: Set up renv
        uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 1

      - name: Install Bioconductor packages
        run: |
          Rscript -e 'if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")'
          Rscript -e 'BiocManager::install("ggtree")' 

      - name: Install quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: 1.4.550


      # - name: Render the book
      #   run: Rscript -e 'babelquarto::render_book()'

      - name: Commit results to main branch
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "CI added changes `date +'%Y-%m-%d %H:%M:%S'`" || echo "No changes to commit"
          git push origin || echo "No changes to commit"

      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          branch: main
          github_token: ${{ secrets.API_TOKEN_GITHUB }}
          # WORKFLOW_GITHUB_TOKEN
          force: true    

      - name: Publish to Netlify
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: netlify
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
